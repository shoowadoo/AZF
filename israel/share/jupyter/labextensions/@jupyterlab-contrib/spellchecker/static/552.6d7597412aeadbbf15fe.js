"use strict";(self.webpackChunk_jupyterlab_contrib_spellchecker=self.webpackChunk_jupyterlab_contrib_spellchecker||[]).push([[552],{552:(e,t,s)=>{s.r(t),s.d(t,{default:()=>G,spellcheckIcon:()=>A});var n=s(373),i=s(580),a=s(172),o=s(778),l=s(663),r=s(760),c=s(408),h=s(354),g=s(987),d=s(790),u=s(379),p=s.n(u),m=s(795),_=s.n(m),y=s(569),f=s.n(y),k=s(565),b=s.n(k),w=s(216),x=s.n(w),T=s(589),v=s.n(T),E=s(660),S={};S.styleTagTransform=v(),S.setAttributes=b(),S.insert=f().bind(null,"head"),S.domAPI=_(),S.insertStyleElement=x(),p()(E.Z,S),E.Z&&E.Z.locals&&E.Z.locals;var C=s(446),I=s(211),L=s(204),R=s(851);const A=new i.LabIcon({name:"spellcheck:spellcheck",svgstr:'<svg xmlns="http://www.w3.org/2000/svg" width="24" viewBox="0 0 24 24">\n  <g class="jp-icon3 jp-icon-selectable" fill="#616161" shape-rendering="geometricPrecision">\n    <path d="M12.45 16h2.09L9.43 3H7.57L2.46 16h2.09l1.12-3h5.64l1.14 3zm-6.02-5L8.5 5.48L10.57 11H6.43zm15.16.59l-8.09 8.09L9.83 16l-1.41 1.41l5.09 5.09L23 13l-1.41-1.41z"/>\n  </g>\n</svg>\n'}),j=s(397);class D{constructor(e){this.serverDictionaries=[],this.onlineDictionaries=[];const t=e.load(O.id).then((e=>{this.updateSettings(e),e.changed.connect((()=>{this.updateSettings(e)}))}));this.ready=Promise.all([this.fetchServerDictionariesList(),t]).then((()=>{console.debug("LanguageManager is ready")}))}updateSettings(e){e&&(this.onlineDictionaries=e.get("onlineDictionaries").composite.map((e=>({...e,isOnline:!0}))))}fetchServerDictionariesList(){return async function(e="",t={}){const s=d.ServerConnection.makeSettings(),n=g.URLExt.join(s.baseUrl,"spellchecker",e);let i;try{i=await d.ServerConnection.makeRequest(n,t,s)}catch(e){throw new d.ServerConnection.NetworkError(e)}const a=await i.json();if(!i.ok)throw new d.ServerConnection.ResponseError(i,a.message);return a}("language_manager").then((e=>{console.debug("Dictionaries fetched from server"),this.serverDictionaries=e.dictionaries.map((e=>({...e,isOnline:!1})))}))}get dictionaries(){return[...this.serverDictionaries,...this.onlineDictionaries]}getChoices(e){return(e?[e,...this.dictionaries.filter((t=>t.id!==e.id))]:this.dictionaries).sort(((e,t)=>e.name.localeCompare(t.name)))}getLanguageByIdentifier(e){const t=this.dictionaries.find((t=>t.id===e));if(t)return t;const s=this.dictionaries.find((t=>t.id.toLowerCase()===e.replace("-","_").toLowerCase()));return s?(console.warn(`Language identifier ${e} has a non-exact match, please update it to ${s.id}`),s):void 0}}class B extends a.ReactWidget{constructor(e){super(),this.language_source=e}render(){return(0,r.TextItem)({source:this.language_source()})}}class M{constructor(e,t,s,i,a,o,l){this.app=e,this.settingRegistry=t,this.editorExtensionRegistry=s,this.palette=a,this.statusBar=o,this.editorLanguages=l,this.suggestions_menu=null,this.check_spelling=!0,this.ignored_tokens=new Set,this.settings=null,this.accepted_types=[],this.wordRegex=/([^-[\]{}():/!;&@$£%§<>"*+=?.,~\\^|_`#±\s\t])+/g,this._active=!0,this._latestMimeType="",this.language_manager=new D(t),this._trans=i.load("jupyterlab-spellchecker"),this.status_msg=this._trans.__("Dictionary not loaded"),this.TEXT_SUGGESTIONS_AVAILABLE=this._trans.__("Adjust spelling to"),this.TEXT_NO_SUGGESTIONS=this._trans.__("No spellcheck suggestions"),this.PALETTE_CATEGORY=this._trans.__("Spell Checker"),this.setup_settings(),this.setup_button(),this.setup_suggestions(),this.status_widget=new B((()=>this._active?this.status_msg:this._trans.__("Spellcheck off"))),this.status_widget.addClass("jp-mod-highlighted"),this.setup_language_picker(),this.setup_ignore_action(),this._invalidate=L.StateEffect.define(),this._invalidationCounter=L.StateField.define({create:()=>0,update:(e,t)=>{for(const s of t.effects)s.is(this._invalidate)&&(e+=1);return e}}),this.editorExtensionRegistry.addExtension({name:"spellchecker",factory:e=>{const t=(0,C.ir)((t=>{if(!this._switchContentType(e.model.mimeType))return[];const s="text/plain"===e.model.mimeType,i=this.settings?.composite?.checkComments||!0,a=this.settings?.composite?.checkStrings||!1,o=[];let l=(0,n.ensureSyntaxTree)(t.state,t.state.doc.length);l||(l=(0,n.syntaxTree)(t.state));const r=[...t.state.sliceDoc(0,t.state.doc.length)],c=new Set(["comment","blockcomment","linecomment"]);l.iterate({mode:R.IterMode.IncludeAnonymous,enter:e=>{if(null===e.node.firstChild){const t=e.name.toLowerCase();if(i&&c.has(t)||a&&"string"===t||s&&"⚠"===t||"paragraph"===t||"document"===t)return!1;for(let t=e.from;t<e.to;t++)r[t]=" "}return!0}});for(const e of r.join("").matchAll(this.wordRegex)){const t=e[0].replace(/(^')|('$)/g,"");""===t||t.match(/^\d+$/)||void 0===this.dictionary||this.dictionary.check(t)||this.ignored_tokens.has(t)||o.push({from:e.index,to:e.index+t.length,severity:"spell",message:""})}return o}),{delay:this.settings?.composite?.debounceTime||200,tooltipFilter:()=>[],needsRefresh:e=>e.startState.field(this._invalidationCounter)!==e.state.field(this._invalidationCounter)}),s=I.EditorView.domEventHandlers({focus:()=>{this._switchContentType(e.model.mimeType)}});return c.EditorExtensionRegistry.createImmutableExtension([t,this._invalidationCounter,s])}})}_switchContentType(e){const t=this.accepted_types.includes(e);return this._latestMimeType=e,this._active!==t&&(this._active=t,this.status_widget.update()),t}setup_settings(){Promise.all([this.settingRegistry.load(O.id),this.app.restored,this.language_manager.ready]).then((([e])=>{this.update_settings(e),e.changed.connect((()=>{this.update_settings(e)}))})).catch((e=>{console.error(e.message)}))}_set_theme(e){document.body.setAttribute("data-jp-spellchecker-theme",e)}update_settings(e){this.settings=e;const t=e.get("ignore").composite;this.ignored_tokens=new Set(t),this.accepted_types=e.get("mimeTypes").composite;const s=e.get("theme").composite;this._set_theme(s);const n=e.get("language").composite,i=this.language_manager.getLanguageByIdentifier(n);if(void 0===i)console.warn("The language "+n+" is not supported!");else{if(i===this.language)return;this.language=i,this.load_dictionary().catch(console.warn)}}toggle_spellcheck(){this.check_spelling=!this.check_spelling,console.log("Spell checking is currently: ",this.check_spelling)}setup_button(){this.app.commands.addCommand("spellchecker:toggle-check-spelling",{label:this._trans.__("Toggle spellchecker"),execute:()=>{this.toggle_spellcheck()}}),this.palette&&this.palette.addItem({command:"spellchecker:toggle-check-spelling",category:this.PALETTE_CATEGORY})}get_contextmenu_context(){const e=this.app._contextMenuEvent,t=e.target.closest(".cm-content");if(null===t)return null;const s=t.cmView.view,n=s.posAtCoords({x:e.clientX,y:e.clientY});return n?{editorView:s,offset:n}:null}get_current_word(e){const{editorView:t,offset:s}=e,n=t.state.wordAt(s);return{range:n,text:t.state.sliceDoc(n.from,n.to)}}setup_suggestions(){this.suggestions_menu=new o.Menu({commands:this.app.commands}),this.suggestions_menu.title.label=this.TEXT_SUGGESTIONS_AVAILABLE,this.suggestions_menu.title.icon=A.bindprops({stylesheet:"menuItem"}),this.app.commands.addCommand("spellchecker:update-suggestions",{execute:e=>{},isVisible:e=>(this.prepare_suggestions(),!1)}),this.app.contextMenu.addItem({selector:".cm-lintRange-spell",command:"spellchecker:update-suggestions"}),this.app.contextMenu.addItem({selector:".cm-lintRange-spell",submenu:this.suggestions_menu,type:"submenu"}),this.app.commands.addCommand("spellchecker:apply-suggestion",{execute:e=>{this.apply_suggestion(e.name)},label:e=>e.name})}setup_ignore_action(){this.app.commands.addCommand("spellchecker:ignore",{execute:()=>{this.ignore()},label:this._trans.__("Ignore")}),this.app.contextMenu.addItem({selector:".cm-lintRange-spell",command:"spellchecker:ignore"})}async ignore(){const e=this.get_contextmenu_context();if(null===e)console.log("Could not ignore the word as the context was no longer available");else{const t=this.get_current_word(e);await this.settings.set("ignore",[t.text.trim(),...this.settings.get("ignore").composite]),this.load_dictionary(),e.editorView.dispatch({effects:this._invalidate.of()})}}prepare_suggestions(){const e=this.get_contextmenu_context();let t;if(null===e)t=[];else{const s=this.get_current_word(e);t=this.dictionary.suggest(s.text)}const s=this.suggestions_menu;if(null===s)throw Error("Suggestions menu not assigned");if(s.clearItems(),t.length){for(const e of t)s.addItem({command:"spellchecker:apply-suggestion",args:{name:e}});s.title.label=this.TEXT_SUGGESTIONS_AVAILABLE,s.title.className="",s.setHidden(!1)}else s.title.className="lm-mod-disabled",s.title.label=this.TEXT_NO_SUGGESTIONS,s.setHidden(!0)}apply_suggestion(e){const t=this.get_contextmenu_context();if(null===t)return void console.warn("Applying suggestion failed (probably was already applied earlier)");const s=this.get_current_word(t);t.editorView.dispatch({changes:[{from:s.range.from,to:s.range.to,insert:e}]})}load_dictionary(){const e=this.language;return e?(this.status_msg=this._trans.__("Loading dictionary…"),this.status_widget.update(),Promise.all([fetch(e.aff).then((e=>e.text())),fetch(e.dic).then((e=>e.text()))]).then((t=>{this.dictionary=new j(e.name,t[0],t[1]),console.debug("Dictionary Loaded ",e.name,e.id),this.status_msg=e.name,this.status_widget.update()}))):new Promise(((e,t)=>t("Cannot load dictionary: no language set")))}choose_language(){const e=this.language_manager.getChoices(this.language),t=e.map((e=>e.isOnline?this._trans.__("%1 [%2] (online)",e.name,e.id):this._trans.__("%1 [%2]",e.name,e.id)));a.InputDialog.getItem({title:this._trans.__("Choose spellchecker language"),items:t}).then((s=>{if(null!==s.value){const n=t.indexOf(s.value),i=this.language_manager.getLanguageByIdentifier(e[n].id);if(!i)return void console.error("Language could not be matched - please report this as an issue");this.language=i,this.settings.set("language",this.language.id).catch(console.warn)}}))}async maybeEnableSpelling(e){let t=e;if(this.editorLanguages){const s=this.editorLanguages.findByMIME(e);s&&(t=s.displayName?s.displayName:s.name)}const s=await(0,a.showDialog)({title:this._trans.__("Enable spellchecking in %1?",t),body:this._trans.__("The will apply to all editors with %1 content type.",e),buttons:[a.Dialog.okButton({label:this._trans.__("Enable")}),a.Dialog.cancelButton()],checkbox:{label:this._trans.__("Remember this decision.")}});if(!0===s.button.accept&&(this.accepted_types.push(e),s.isChecked)){const t=this.settings.get("mimeTypes").composite;t.push(e),await this.settings.set("mimeTypes",t)}}setup_language_picker(){this.status_widget.node.onclick=()=>{if(!this._active&&this._latestMimeType)return this.maybeEnableSpelling(this._latestMimeType);this.choose_language()},this.app.commands.addCommand("spellchecker:choose-language",{execute:e=>this.choose_language(),label:this._trans.__("Choose spellchecker language")}),this.palette&&this.palette.addItem({command:"spellchecker:choose-language",category:this.PALETTE_CATEGORY}),this.statusBar&&this.statusBar.registerStatusItem("spellchecker:choose-language",{align:"right",item:this.status_widget})}}const O={id:"@jupyterlab-contrib/spellchecker:plugin",autoStart:!0,requires:[l.ISettingRegistry,c.IEditorExtensionRegistry],optional:[h.ITranslator,a.ICommandPalette,r.IStatusBar,c.IEditorLanguageRegistry],activate:function(e,t,s,n,i,a,o){console.debug("Attempting to load spellchecker");const l=new M(e,t,s,n||h.nullTranslator,i,a,o);console.debug("Spellchecker loaded ",l)}},G=O},660:(e,t,s)=>{s.d(t,{Z:()=>l});var n=s(81),i=s.n(n),a=s(645),o=s.n(a)()(i());o.push([e.id,"body[data-jp-spellchecker-theme='background-box'] .cm-lintRange-spell {\n  background: rgb(255 0 0 / 15%);\n}\n\nbody[data-jp-spellchecker-theme='background-box'][data-jp-theme-light='false']\n  .cm-lintRange-spell {\n  background: rgb(255 0 0 / 35%);\n  text-shadow: 0 0 5px black;\n}\n\nbody[data-jp-spellchecker-theme='wavy-underline'] .cm-lintRange-spell {\n  text-decoration-line: underline;\n  text-decoration-style: wavy;\n  text-decoration-color: red;\n\n  /* For Chrome */\n  text-decoration-skip-ink: none;\n}\n\nbody[data-jp-spellchecker-theme='wavy-underline'][data-jp-theme-light='false']\n  .cm-lintRange-spell {\n  /* Use bright red for dark themes */\n  text-decoration-color: #ff5722;\n}\n\nbody[data-jp-spellchecker-theme='dotted-underline'] .cm-lintRange-spell {\n  text-decoration-line: underline;\n  text-decoration-style: dotted;\n  text-decoration-color: red;\n\n  /* For Chrome */\n  text-decoration-skip-ink: none;\n}\n\nbody[data-jp-spellchecker-theme='dotted-underline'][data-jp-theme-light='false']\n  .cm-lintRange-spell {\n  /* Use bright red for dark themes */\n  text-decoration-color: #ff5722;\n}\n",""]);const l=o}}]);